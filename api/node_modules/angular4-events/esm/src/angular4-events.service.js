import { Injectable } from '@angular/core';
import { Subject } from 'rxjs';
var ServiceName = "Events Service";
var EventsService = /** @class */ (function () {
    function EventsService() {
        this.events = {};
    }
    EventsService.prototype.subscribe = function (event, callback, error, complete) {
        if (!event) {
            throw new Error("[" + ServiceName + "] => Subscription method must get event name.");
        }
        if (this.events[event] === undefined) {
            this.events[event] = new Subject();
        }
        if (typeof callback !== 'function') {
            return this.events[event].asObservable();
        }
        else {
            return this.events[event].asObservable().subscribe(callback, error, complete);
        }
    };
    EventsService.prototype.publish = function (event, eventObject) {
        if (!event) {
            throw new Error("[" + ServiceName + "] => Publish method must get event name.");
        }
        else if (!this.events[event]) {
            return;
        }
        this.events[event].next(eventObject);
    };
    EventsService.decorators = [
        { type: Injectable },
    ];
    /** @nocollapse */
    EventsService.ctorParameters = function () { return []; };
    return EventsService;
}());
export { EventsService };
//# sourceMappingURL=angular4-events.service.js.map